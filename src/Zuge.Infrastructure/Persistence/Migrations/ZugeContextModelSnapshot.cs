// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Zuge.Infrastructure.Persistence;

#nullable disable

namespace Zuge.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ZugeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Zuge.Domain.Types.Journey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Journey");
                });

            modelBuilder.Entity("Zuge.Domain.Types.Journey", b =>
                {
                    b.OwnsMany("Zuge.Domain.Types.Stop", "Stops", b1 =>
                        {
                            b1.Property<Guid>("JourneyId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<TimeOnly>("Arrival")
                                .HasColumnType("time without time zone");

                            b1.Property<TimeOnly>("Departure")
                                .HasColumnType("time without time zone");

                            b1.Property<string>("Station")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("JourneyId", "Id");

                            b1.ToTable("Stop");

                            b1.WithOwner()
                                .HasForeignKey("JourneyId");
                        });

                    b.OwnsOne("Zuge.Domain.Types.Train", "Train", b1 =>
                        {
                            b1.Property<Guid>("JourneyId")
                                .HasColumnType("uuid");

                            b1.Property<int>("LineNumber")
                                .HasColumnType("integer");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("JourneyId");

                            b1.ToTable("Journey");

                            b1.WithOwner()
                                .HasForeignKey("JourneyId");
                        });

                    b.Navigation("Stops");

                    b.Navigation("Train")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
